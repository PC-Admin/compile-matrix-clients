---

- name: Test if SSH is possible
  delegate_to: '{{ server_ip_final }}'
  command: echo success
  register: echo_output
  
- debug:
    msg: "{{ echo_output.stdout }}"

- name: Disable password authentication
  delegate_to: '{{ server_ip_final }}'
  lineinfile:
    path: /etc/ssh/sshd_config
    line: 'PasswordAuthentication no'

- name: Set hostname for compilation machine
  delegate_to: '{{ server_ip_final }}'
  hostname:
    name: "compile-element"
    use: systemd

- name: Update repositories and all packages on compilation machine
  delegate_to: '{{ server_ip_final }}'
  apt:
    name: "*"
    update_cache: yes
    state: latest

- name: Install necessary utils on compilation machine
  delegate_to: '{{ server_ip_final }}'
  apt:
    pkg:
     - unzip
     - openjdk-11-jdk
     - git
     - ufw

- name: Allow all access to TCP port 22 for SSH
  delegate_to: '{{ server_ip_final }}'
  ufw:
    rule: allow
    port: '22'
    proto: tcp

- name: Default allow outgoing traffic with UFW
  delegate_to: '{{ server_ip_final }}'
  ufw:
    policy: allow
    direction: outgoing

- name: Default deny incoming traffic with UFW
  delegate_to: '{{ server_ip_final }}'
  ufw:
    policy: allow
    direction: incoming

- name: Reload UFW
  delegate_to: '{{ server_ip_final }}'
  ufw:
    state: reloaded

- name: Check if the swapfile exists
  delegate_to: "{{ server_ip_final }}"
  stat:
    path: /swapfile
  register: swapfile_result

- name: Disable existing swap if plan_title has changed
  delegate_to: "{{ server_ip_final }}"
  command: 'swapoff /swapfile'
  when: set_plan_title.changed and swapfile_result.stat.exists

- name: Delete existing swap file if plan_title has changed
  delegate_to: "{{ server_ip_final }}"
  file:
    path: '/swapfile'
    state: absent
  when: set_plan_title.changed and swapfile_result.stat.exists

- name: Create swapfile with the right permissions
  delegate_to: "{{ server_ip_final }}"
  command: 'fallocate -l {{ swap_size }} /swapfile'
  register: swapfile_new
  args:
    creates: /swapfile
    
- name: Set correct permissions on swapfile
  delegate_to: "{{ server_ip_final }}"
  file:
    path: '/swapfile'
    owner: root
    group: root
    mode: '0600'
  when: swapfile_new.delta is defined

- name: Make swapfile
  delegate_to: "{{ server_ip_final }}"
  command: 'mkswap /swapfile'
  when: swapfile_new.delta is defined
  
- name: Enable swapfile
  delegate_to: "{{ server_ip_final }}"
  command: 'swapon /swapfile'
  when: swapfile_new.delta is defined